syntax="proto3";

import "user.proto";
import "common.proto";

package teampb;

service TeamService {
    rpc GetTeam(commonpb.GetByIdRequest) returns (TeamResponse);
    rpc GetTeamWithPlayers(commonpb.GetByIdRequest) returns (TeamWithPlayers); // ??
    rpc ListTeam(ListTeamRequest) returns (ListTeamResponse);
    rpc CreateTeam(CreateTeamRequest) returns (TeamResponse);
    rpc UpdateTeam(Team) returns (TeamResponse);
    rpc UpdateTeamAvatar(commonpb.File) returns (TeamResponse);
    rpc InvitePlayer(InvitePlayerRequest) returns (common.SuccessResponse);
    rpc AcceptInvite(AcceptInviteRequest) returns (TeamResponse);
    rpc AssignCaptain(commonpb.GetByIdRequest) returns (TeamResponse);
    rpc LeaveTeam(commonpb.Empty) returns (TeamResponse); // if is captain, need to assign new captain
    rpc KickPlayer(commonpb.GetByIdRequest) returns (TeamResponse);
    rpc DeleteTeam(commonpb.Empty) returns (commonpb.SuccessResponse);
    // Add comment?
}

message TeamResponse {
    Team team = 1;
}

message ListTeamRequest {
    commonpb.Query query = 1;
    commonpb.PaginationRequest pagination = 2;
}

message ListTeamResponse {
    repeated Team teams = 1;
    commonpb.PaginationResponse pagination = 2;
}

message CreateTeamRequest {
    string name = 2;
    optional string description = 3;
    int32 districtId = 4;
}

// Need pending status here
message InvitePlayerRequest {
    int32 playerId = 1;
}

message AcceptInviteRequest {
    int32 inviteId = 1;
}

message Team{
    int32 id = 1;
    string name = 2;
    string description = 3;
    int32 districtId = 4;
    string avatarPath = 5;
}

message TeamList{
    repeated Team teams = 1;
}

message TeamWithPlayers {
    Team team = 1;
    repeated userpb.User players = 2;
}

